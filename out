Simulating: Seq (Seq (Let "x" (Literal 10)) (Let "y" (Literal 29))) (Let "z" (Literal 3))
     Machine: Simulator (Scope (fromList []) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Let "x" (Literal 10)) (Let "y" (Literal 29))
     Machine: Simulator (Scope (fromList []) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Let "x" (Literal 10)
     Machine: Simulator (Scope (fromList []) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Literal 10
     Machine: Simulator (Scope (fromList []) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Let "y" (Literal 29)) (Let "z" (Literal 3))
     Machine: Simulator (Scope (fromList [("x",IntVal 10)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Let "y" (Literal 29)
     Machine: Simulator (Scope (fromList [("x",IntVal 10)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Literal 29
     Machine: Simulator (Scope (fromList [("x",IntVal 10)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Let "z" (Literal 3)
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 29)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Literal 3
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 29)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Let "x" (Literal 10)) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))
     Machine: Simulator (Scope (fromList []) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Let "x" (Literal 10)
     Machine: Simulator (Scope (fromList []) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Literal 10
     Machine: Simulator (Scope (fromList []) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: If (Var "x") (Seq (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))) Skip
     Machine: Simulator (Scope (fromList [("x",IntVal 10)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 10)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))
     Machine: Simulator (Scope (fromList [("x",IntVal 10)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Write (Var "x")
     Machine: Simulator (Scope (fromList [("x",IntVal 10)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 10)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Let "x" (BinaryOps Sub (Var "x") (Literal 1))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10)]) Nothing) [] [IntVal 10] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Let "x" (BinaryOps Sub (Var "x") (Literal 1))
     Machine: Simulator (Scope (fromList [("x",IntVal 10)]) Nothing) [] [IntVal 10] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Sub (Var "x") (Literal 1)
     Machine: Simulator (Scope (fromList [("x",IntVal 10)]) Nothing) [] [IntVal 10] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 10)]) Nothing) [] [IntVal 10] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Literal 1
     Machine: Simulator (Scope (fromList [("x",IntVal 10)]) Nothing) [] [IntVal 10] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1))))
     Machine: Simulator (Scope (fromList [("x",IntVal 9)]) Nothing) [] [IntVal 10] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: If (Var "x") (Seq (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))) Skip
     Machine: Simulator (Scope (fromList [("x",IntVal 9)]) Nothing) [] [IntVal 10] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 9)]) Nothing) [] [IntVal 10] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 9)]) Nothing) [] [IntVal 10] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))
     Machine: Simulator (Scope (fromList [("x",IntVal 9)]) Nothing) [] [IntVal 10] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Write (Var "x")
     Machine: Simulator (Scope (fromList [("x",IntVal 9)]) Nothing) [] [IntVal 10] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 9)]) Nothing) [] [IntVal 10] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Let "x" (BinaryOps Sub (Var "x") (Literal 1))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 9)]) Nothing) [] [IntVal 10,IntVal 9] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Let "x" (BinaryOps Sub (Var "x") (Literal 1))
     Machine: Simulator (Scope (fromList [("x",IntVal 9)]) Nothing) [] [IntVal 10,IntVal 9] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Sub (Var "x") (Literal 1)
     Machine: Simulator (Scope (fromList [("x",IntVal 9)]) Nothing) [] [IntVal 10,IntVal 9] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 9)]) Nothing) [] [IntVal 10,IntVal 9] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Literal 1
     Machine: Simulator (Scope (fromList [("x",IntVal 9)]) Nothing) [] [IntVal 10,IntVal 9] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1))))
     Machine: Simulator (Scope (fromList [("x",IntVal 8)]) Nothing) [] [IntVal 10,IntVal 9] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: If (Var "x") (Seq (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))) Skip
     Machine: Simulator (Scope (fromList [("x",IntVal 8)]) Nothing) [] [IntVal 10,IntVal 9] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 8)]) Nothing) [] [IntVal 10,IntVal 9] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 8)]) Nothing) [] [IntVal 10,IntVal 9] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))
     Machine: Simulator (Scope (fromList [("x",IntVal 8)]) Nothing) [] [IntVal 10,IntVal 9] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Write (Var "x")
     Machine: Simulator (Scope (fromList [("x",IntVal 8)]) Nothing) [] [IntVal 10,IntVal 9] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 8)]) Nothing) [] [IntVal 10,IntVal 9] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Let "x" (BinaryOps Sub (Var "x") (Literal 1))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 8)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Let "x" (BinaryOps Sub (Var "x") (Literal 1))
     Machine: Simulator (Scope (fromList [("x",IntVal 8)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Sub (Var "x") (Literal 1)
     Machine: Simulator (Scope (fromList [("x",IntVal 8)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 8)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Literal 1
     Machine: Simulator (Scope (fromList [("x",IntVal 8)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1))))
     Machine: Simulator (Scope (fromList [("x",IntVal 7)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: If (Var "x") (Seq (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))) Skip
     Machine: Simulator (Scope (fromList [("x",IntVal 7)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 7)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 7)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))
     Machine: Simulator (Scope (fromList [("x",IntVal 7)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Write (Var "x")
     Machine: Simulator (Scope (fromList [("x",IntVal 7)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 7)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Let "x" (BinaryOps Sub (Var "x") (Literal 1))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 7)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Let "x" (BinaryOps Sub (Var "x") (Literal 1))
     Machine: Simulator (Scope (fromList [("x",IntVal 7)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Sub (Var "x") (Literal 1)
     Machine: Simulator (Scope (fromList [("x",IntVal 7)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 7)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Literal 1
     Machine: Simulator (Scope (fromList [("x",IntVal 7)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1))))
     Machine: Simulator (Scope (fromList [("x",IntVal 6)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: If (Var "x") (Seq (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))) Skip
     Machine: Simulator (Scope (fromList [("x",IntVal 6)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 6)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 6)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))
     Machine: Simulator (Scope (fromList [("x",IntVal 6)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Write (Var "x")
     Machine: Simulator (Scope (fromList [("x",IntVal 6)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 6)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Let "x" (BinaryOps Sub (Var "x") (Literal 1))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 6)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Let "x" (BinaryOps Sub (Var "x") (Literal 1))
     Machine: Simulator (Scope (fromList [("x",IntVal 6)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Sub (Var "x") (Literal 1)
     Machine: Simulator (Scope (fromList [("x",IntVal 6)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 6)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Literal 1
     Machine: Simulator (Scope (fromList [("x",IntVal 6)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1))))
     Machine: Simulator (Scope (fromList [("x",IntVal 5)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: If (Var "x") (Seq (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))) Skip
     Machine: Simulator (Scope (fromList [("x",IntVal 5)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 5)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 5)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))
     Machine: Simulator (Scope (fromList [("x",IntVal 5)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Write (Var "x")
     Machine: Simulator (Scope (fromList [("x",IntVal 5)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 5)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Let "x" (BinaryOps Sub (Var "x") (Literal 1))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 5)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Let "x" (BinaryOps Sub (Var "x") (Literal 1))
     Machine: Simulator (Scope (fromList [("x",IntVal 5)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Sub (Var "x") (Literal 1)
     Machine: Simulator (Scope (fromList [("x",IntVal 5)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 5)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Literal 1
     Machine: Simulator (Scope (fromList [("x",IntVal 5)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1))))
     Machine: Simulator (Scope (fromList [("x",IntVal 4)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: If (Var "x") (Seq (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))) Skip
     Machine: Simulator (Scope (fromList [("x",IntVal 4)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 4)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 4)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))
     Machine: Simulator (Scope (fromList [("x",IntVal 4)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Write (Var "x")
     Machine: Simulator (Scope (fromList [("x",IntVal 4)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 4)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Let "x" (BinaryOps Sub (Var "x") (Literal 1))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 4)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Let "x" (BinaryOps Sub (Var "x") (Literal 1))
     Machine: Simulator (Scope (fromList [("x",IntVal 4)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Sub (Var "x") (Literal 1)
     Machine: Simulator (Scope (fromList [("x",IntVal 4)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 4)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Literal 1
     Machine: Simulator (Scope (fromList [("x",IntVal 4)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1))))
     Machine: Simulator (Scope (fromList [("x",IntVal 3)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: If (Var "x") (Seq (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))) Skip
     Machine: Simulator (Scope (fromList [("x",IntVal 3)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 3)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 3)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))
     Machine: Simulator (Scope (fromList [("x",IntVal 3)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Write (Var "x")
     Machine: Simulator (Scope (fromList [("x",IntVal 3)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 3)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Let "x" (BinaryOps Sub (Var "x") (Literal 1))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 3)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Let "x" (BinaryOps Sub (Var "x") (Literal 1))
     Machine: Simulator (Scope (fromList [("x",IntVal 3)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Sub (Var "x") (Literal 1)
     Machine: Simulator (Scope (fromList [("x",IntVal 3)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 3)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Literal 1
     Machine: Simulator (Scope (fromList [("x",IntVal 3)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1))))
     Machine: Simulator (Scope (fromList [("x",IntVal 2)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: If (Var "x") (Seq (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))) Skip
     Machine: Simulator (Scope (fromList [("x",IntVal 2)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 2)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 2)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))
     Machine: Simulator (Scope (fromList [("x",IntVal 2)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Write (Var "x")
     Machine: Simulator (Scope (fromList [("x",IntVal 2)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 2)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Let "x" (BinaryOps Sub (Var "x") (Literal 1))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 2)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3,IntVal 2] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Let "x" (BinaryOps Sub (Var "x") (Literal 1))
     Machine: Simulator (Scope (fromList [("x",IntVal 2)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3,IntVal 2] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Sub (Var "x") (Literal 1)
     Machine: Simulator (Scope (fromList [("x",IntVal 2)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3,IntVal 2] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 2)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3,IntVal 2] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Literal 1
     Machine: Simulator (Scope (fromList [("x",IntVal 2)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3,IntVal 2] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1))))
     Machine: Simulator (Scope (fromList [("x",IntVal 1)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3,IntVal 2] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: If (Var "x") (Seq (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))) Skip
     Machine: Simulator (Scope (fromList [("x",IntVal 1)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3,IntVal 2] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 1)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3,IntVal 2] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 1)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3,IntVal 2] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))
     Machine: Simulator (Scope (fromList [("x",IntVal 1)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3,IntVal 2] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Write (Var "x")
     Machine: Simulator (Scope (fromList [("x",IntVal 1)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3,IntVal 2] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 1)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3,IntVal 2] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Let "x" (BinaryOps Sub (Var "x") (Literal 1))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 1)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3,IntVal 2,IntVal 1] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Let "x" (BinaryOps Sub (Var "x") (Literal 1))
     Machine: Simulator (Scope (fromList [("x",IntVal 1)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3,IntVal 2,IntVal 1] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Sub (Var "x") (Literal 1)
     Machine: Simulator (Scope (fromList [("x",IntVal 1)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3,IntVal 2,IntVal 1] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 1)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3,IntVal 2,IntVal 1] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Literal 1
     Machine: Simulator (Scope (fromList [("x",IntVal 1)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3,IntVal 2,IntVal 1] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1))))
     Machine: Simulator (Scope (fromList [("x",IntVal 0)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3,IntVal 2,IntVal 1] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: If (Var "x") (Seq (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))) (While (Var "x") (Seq (Write (Var "x")) (Let "x" (BinaryOps Sub (Var "x") (Literal 1)))))) Skip
     Machine: Simulator (Scope (fromList [("x",IntVal 0)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3,IntVal 2,IntVal 1] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 0)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3,IntVal 2,IntVal 1] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Skip
     Machine: Simulator (Scope (fromList [("x",IntVal 0)]) Nothing) [] [IntVal 10,IntVal 9,IntVal 8,IntVal 7,IntVal 6,IntVal 5,IntVal 4,IntVal 3,IntVal 2,IntVal 1] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Let "x" (Literal 10)) (Let "y" (Literal 5))) (Write (BinaryOps Gt (Var "x") (Var "y")))) (Write (BinaryOps Lt (Var "x") (Var "y")))) (Write (BinaryOps Eq (Var "x") (Var "y")))) (Write (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))) (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))))) (Write (UnaryOps Not (BinaryOps Lt (Var "x") (Var "y"))))) (If (BinaryOps Gt (Var "x") (Var "y")) (Write (Literal 100)) (Write (Literal 200)))) (While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))))
     Machine: Simulator (Scope (fromList []) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Let "x" (Literal 10)) (Let "y" (Literal 5))) (Write (BinaryOps Gt (Var "x") (Var "y")))) (Write (BinaryOps Lt (Var "x") (Var "y")))) (Write (BinaryOps Eq (Var "x") (Var "y")))) (Write (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))) (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))))) (Write (UnaryOps Not (BinaryOps Lt (Var "x") (Var "y"))))) (If (BinaryOps Gt (Var "x") (Var "y")) (Write (Literal 100)) (Write (Literal 200)))
     Machine: Simulator (Scope (fromList []) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Let "x" (Literal 10)) (Let "y" (Literal 5))) (Write (BinaryOps Gt (Var "x") (Var "y")))) (Write (BinaryOps Lt (Var "x") (Var "y")))) (Write (BinaryOps Eq (Var "x") (Var "y")))) (Write (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))) (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))))) (Write (UnaryOps Not (BinaryOps Lt (Var "x") (Var "y"))))
     Machine: Simulator (Scope (fromList []) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Seq (Seq (Seq (Seq (Let "x" (Literal 10)) (Let "y" (Literal 5))) (Write (BinaryOps Gt (Var "x") (Var "y")))) (Write (BinaryOps Lt (Var "x") (Var "y")))) (Write (BinaryOps Eq (Var "x") (Var "y")))) (Write (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))) (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))))
     Machine: Simulator (Scope (fromList []) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Seq (Seq (Seq (Let "x" (Literal 10)) (Let "y" (Literal 5))) (Write (BinaryOps Gt (Var "x") (Var "y")))) (Write (BinaryOps Lt (Var "x") (Var "y")))) (Write (BinaryOps Eq (Var "x") (Var "y")))) (Write (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))
     Machine: Simulator (Scope (fromList []) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Seq (Seq (Let "x" (Literal 10)) (Let "y" (Literal 5))) (Write (BinaryOps Gt (Var "x") (Var "y")))) (Write (BinaryOps Lt (Var "x") (Var "y")))) (Write (BinaryOps Eq (Var "x") (Var "y")))) (Write (BinaryOps Neq (Var "x") (Var "y")))
     Machine: Simulator (Scope (fromList []) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Seq (Let "x" (Literal 10)) (Let "y" (Literal 5))) (Write (BinaryOps Gt (Var "x") (Var "y")))) (Write (BinaryOps Lt (Var "x") (Var "y")))) (Write (BinaryOps Eq (Var "x") (Var "y")))
     Machine: Simulator (Scope (fromList []) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Let "x" (Literal 10)) (Let "y" (Literal 5))) (Write (BinaryOps Gt (Var "x") (Var "y")))) (Write (BinaryOps Lt (Var "x") (Var "y")))
     Machine: Simulator (Scope (fromList []) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Let "x" (Literal 10)) (Let "y" (Literal 5))) (Write (BinaryOps Gt (Var "x") (Var "y")))
     Machine: Simulator (Scope (fromList []) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Let "x" (Literal 10)) (Let "y" (Literal 5))
     Machine: Simulator (Scope (fromList []) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Let "x" (Literal 10)
     Machine: Simulator (Scope (fromList []) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Literal 10
     Machine: Simulator (Scope (fromList []) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Let "y" (Literal 5)) (Write (BinaryOps Gt (Var "x") (Var "y")))) (Write (BinaryOps Lt (Var "x") (Var "y")))) (Write (BinaryOps Eq (Var "x") (Var "y")))) (Write (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))) (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))))) (Write (UnaryOps Not (BinaryOps Lt (Var "x") (Var "y"))))) (If (BinaryOps Gt (Var "x") (Var "y")) (Write (Literal 100)) (Write (Literal 200)))) (While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Let "y" (Literal 5)) (Write (BinaryOps Gt (Var "x") (Var "y")))) (Write (BinaryOps Lt (Var "x") (Var "y")))) (Write (BinaryOps Eq (Var "x") (Var "y")))) (Write (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))) (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))))) (Write (UnaryOps Not (BinaryOps Lt (Var "x") (Var "y"))))) (If (BinaryOps Gt (Var "x") (Var "y")) (Write (Literal 100)) (Write (Literal 200)))
     Machine: Simulator (Scope (fromList [("x",IntVal 10)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Seq (Seq (Seq (Seq (Let "y" (Literal 5)) (Write (BinaryOps Gt (Var "x") (Var "y")))) (Write (BinaryOps Lt (Var "x") (Var "y")))) (Write (BinaryOps Eq (Var "x") (Var "y")))) (Write (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))) (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))))) (Write (UnaryOps Not (BinaryOps Lt (Var "x") (Var "y"))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Seq (Seq (Seq (Let "y" (Literal 5)) (Write (BinaryOps Gt (Var "x") (Var "y")))) (Write (BinaryOps Lt (Var "x") (Var "y")))) (Write (BinaryOps Eq (Var "x") (Var "y")))) (Write (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))) (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Seq (Seq (Let "y" (Literal 5)) (Write (BinaryOps Gt (Var "x") (Var "y")))) (Write (BinaryOps Lt (Var "x") (Var "y")))) (Write (BinaryOps Eq (Var "x") (Var "y")))) (Write (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Seq (Let "y" (Literal 5)) (Write (BinaryOps Gt (Var "x") (Var "y")))) (Write (BinaryOps Lt (Var "x") (Var "y")))) (Write (BinaryOps Eq (Var "x") (Var "y")))) (Write (BinaryOps Neq (Var "x") (Var "y")))
     Machine: Simulator (Scope (fromList [("x",IntVal 10)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Let "y" (Literal 5)) (Write (BinaryOps Gt (Var "x") (Var "y")))) (Write (BinaryOps Lt (Var "x") (Var "y")))) (Write (BinaryOps Eq (Var "x") (Var "y")))
     Machine: Simulator (Scope (fromList [("x",IntVal 10)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Let "y" (Literal 5)) (Write (BinaryOps Gt (Var "x") (Var "y")))) (Write (BinaryOps Lt (Var "x") (Var "y")))
     Machine: Simulator (Scope (fromList [("x",IntVal 10)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Let "y" (Literal 5)) (Write (BinaryOps Gt (Var "x") (Var "y")))
     Machine: Simulator (Scope (fromList [("x",IntVal 10)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Let "y" (Literal 5)
     Machine: Simulator (Scope (fromList [("x",IntVal 10)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Literal 5
     Machine: Simulator (Scope (fromList [("x",IntVal 10)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Seq (Seq (Seq (Seq (Seq (Write (BinaryOps Gt (Var "x") (Var "y"))) (Write (BinaryOps Lt (Var "x") (Var "y")))) (Write (BinaryOps Eq (Var "x") (Var "y")))) (Write (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))) (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))))) (Write (UnaryOps Not (BinaryOps Lt (Var "x") (Var "y"))))) (If (BinaryOps Gt (Var "x") (Var "y")) (Write (Literal 100)) (Write (Literal 200)))) (While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Seq (Seq (Seq (Seq (Write (BinaryOps Gt (Var "x") (Var "y"))) (Write (BinaryOps Lt (Var "x") (Var "y")))) (Write (BinaryOps Eq (Var "x") (Var "y")))) (Write (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))) (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))))) (Write (UnaryOps Not (BinaryOps Lt (Var "x") (Var "y"))))) (If (BinaryOps Gt (Var "x") (Var "y")) (Write (Literal 100)) (Write (Literal 200)))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Seq (Seq (Seq (Write (BinaryOps Gt (Var "x") (Var "y"))) (Write (BinaryOps Lt (Var "x") (Var "y")))) (Write (BinaryOps Eq (Var "x") (Var "y")))) (Write (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))) (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))))) (Write (UnaryOps Not (BinaryOps Lt (Var "x") (Var "y"))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Seq (Seq (Write (BinaryOps Gt (Var "x") (Var "y"))) (Write (BinaryOps Lt (Var "x") (Var "y")))) (Write (BinaryOps Eq (Var "x") (Var "y")))) (Write (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))) (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Seq (Write (BinaryOps Gt (Var "x") (Var "y"))) (Write (BinaryOps Lt (Var "x") (Var "y")))) (Write (BinaryOps Eq (Var "x") (Var "y")))) (Write (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Write (BinaryOps Gt (Var "x") (Var "y"))) (Write (BinaryOps Lt (Var "x") (Var "y")))) (Write (BinaryOps Eq (Var "x") (Var "y")))) (Write (BinaryOps Neq (Var "x") (Var "y")))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Write (BinaryOps Gt (Var "x") (Var "y"))) (Write (BinaryOps Lt (Var "x") (Var "y")))) (Write (BinaryOps Eq (Var "x") (Var "y")))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Write (BinaryOps Gt (Var "x") (Var "y"))) (Write (BinaryOps Lt (Var "x") (Var "y")))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Write (BinaryOps Gt (Var "x") (Var "y"))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Gt (Var "x") (Var "y")
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "y"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Seq (Seq (Seq (Seq (Write (BinaryOps Lt (Var "x") (Var "y"))) (Write (BinaryOps Eq (Var "x") (Var "y")))) (Write (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))) (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))))) (Write (UnaryOps Not (BinaryOps Lt (Var "x") (Var "y"))))) (If (BinaryOps Gt (Var "x") (Var "y")) (Write (Literal 100)) (Write (Literal 200)))) (While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Seq (Seq (Seq (Write (BinaryOps Lt (Var "x") (Var "y"))) (Write (BinaryOps Eq (Var "x") (Var "y")))) (Write (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))) (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))))) (Write (UnaryOps Not (BinaryOps Lt (Var "x") (Var "y"))))) (If (BinaryOps Gt (Var "x") (Var "y")) (Write (Literal 100)) (Write (Literal 200)))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Seq (Seq (Write (BinaryOps Lt (Var "x") (Var "y"))) (Write (BinaryOps Eq (Var "x") (Var "y")))) (Write (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))) (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))))) (Write (UnaryOps Not (BinaryOps Lt (Var "x") (Var "y"))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Seq (Write (BinaryOps Lt (Var "x") (Var "y"))) (Write (BinaryOps Eq (Var "x") (Var "y")))) (Write (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))) (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Write (BinaryOps Lt (Var "x") (Var "y"))) (Write (BinaryOps Eq (Var "x") (Var "y")))) (Write (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Write (BinaryOps Lt (Var "x") (Var "y"))) (Write (BinaryOps Eq (Var "x") (Var "y")))) (Write (BinaryOps Neq (Var "x") (Var "y")))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Write (BinaryOps Lt (Var "x") (Var "y"))) (Write (BinaryOps Eq (Var "x") (Var "y")))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Write (BinaryOps Lt (Var "x") (Var "y"))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Lt (Var "x") (Var "y")
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "y"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Seq (Seq (Seq (Write (BinaryOps Eq (Var "x") (Var "y"))) (Write (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))) (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))))) (Write (UnaryOps Not (BinaryOps Lt (Var "x") (Var "y"))))) (If (BinaryOps Gt (Var "x") (Var "y")) (Write (Literal 100)) (Write (Literal 200)))) (While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Seq (Seq (Write (BinaryOps Eq (Var "x") (Var "y"))) (Write (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))) (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))))) (Write (UnaryOps Not (BinaryOps Lt (Var "x") (Var "y"))))) (If (BinaryOps Gt (Var "x") (Var "y")) (Write (Literal 100)) (Write (Literal 200)))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Seq (Write (BinaryOps Eq (Var "x") (Var "y"))) (Write (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))) (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))))) (Write (UnaryOps Not (BinaryOps Lt (Var "x") (Var "y"))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Write (BinaryOps Eq (Var "x") (Var "y"))) (Write (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))) (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Write (BinaryOps Eq (Var "x") (Var "y"))) (Write (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Write (BinaryOps Eq (Var "x") (Var "y"))) (Write (BinaryOps Neq (Var "x") (Var "y")))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Write (BinaryOps Eq (Var "x") (Var "y"))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Eq (Var "x") (Var "y")
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "y"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Seq (Seq (Write (BinaryOps Neq (Var "x") (Var "y"))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))) (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))))) (Write (UnaryOps Not (BinaryOps Lt (Var "x") (Var "y"))))) (If (BinaryOps Gt (Var "x") (Var "y")) (Write (Literal 100)) (Write (Literal 200)))) (While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Seq (Write (BinaryOps Neq (Var "x") (Var "y"))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))) (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))))) (Write (UnaryOps Not (BinaryOps Lt (Var "x") (Var "y"))))) (If (BinaryOps Gt (Var "x") (Var "y")) (Write (Literal 100)) (Write (Literal 200)))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Write (BinaryOps Neq (Var "x") (Var "y"))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))) (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))))) (Write (UnaryOps Not (BinaryOps Lt (Var "x") (Var "y"))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Write (BinaryOps Neq (Var "x") (Var "y"))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))) (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Write (BinaryOps Neq (Var "x") (Var "y"))) (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Write (BinaryOps Neq (Var "x") (Var "y"))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Neq (Var "x") (Var "y")
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "y"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Seq (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))))) (Write (UnaryOps Not (BinaryOps Lt (Var "x") (Var "y"))))) (If (BinaryOps Gt (Var "x") (Var "y")) (Write (Literal 100)) (Write (Literal 200)))) (While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))))) (Write (UnaryOps Not (BinaryOps Lt (Var "x") (Var "y"))))) (If (BinaryOps Gt (Var "x") (Var "y")) (Write (Literal 100)) (Write (Literal 200)))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))))) (Write (UnaryOps Not (BinaryOps Lt (Var "x") (Var "y"))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y")))) (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Write (BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y")))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps And (BinaryOps Gt (Var "x") (Var "y")) (BinaryOps Neq (Var "x") (Var "y"))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Gt (Var "x") (Var "y")
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "y"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Neq (Var "x") (Var "y")
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "y"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Seq (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y")))) (Write (UnaryOps Not (BinaryOps Lt (Var "x") (Var "y"))))) (If (BinaryOps Gt (Var "x") (Var "y")) (Write (Literal 100)) (Write (Literal 200)))) (While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y")))) (Write (UnaryOps Not (BinaryOps Lt (Var "x") (Var "y"))))) (If (BinaryOps Gt (Var "x") (Var "y")) (Write (Literal 100)) (Write (Literal 200)))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y")))) (Write (UnaryOps Not (BinaryOps Lt (Var "x") (Var "y"))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Write (BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y")))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Or (BinaryOps Lt (Var "x") (Var "y")) (BinaryOps Gt (Var "x") (Var "y"))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Lt (Var "x") (Var "y")
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "y"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Gt (Var "x") (Var "y")
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "y"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Write (UnaryOps Not (BinaryOps Lt (Var "x") (Var "y")))) (If (BinaryOps Gt (Var "x") (Var "y")) (Write (Literal 100)) (Write (Literal 200)))) (While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Write (UnaryOps Not (BinaryOps Lt (Var "x") (Var "y")))) (If (BinaryOps Gt (Var "x") (Var "y")) (Write (Literal 100)) (Write (Literal 200)))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Write (UnaryOps Not (BinaryOps Lt (Var "x") (Var "y")))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: UnaryOps Not (BinaryOps Lt (Var "x") (Var "y"))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Lt (Var "x") (Var "y")
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "y"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (If (BinaryOps Gt (Var "x") (Var "y")) (Write (Literal 100)) (Write (Literal 200))) (While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: If (BinaryOps Gt (Var "x") (Var "y")) (Write (Literal 100)) (Write (Literal 200))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Gt (Var "x") (Var "y")
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "y"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Write (Literal 100)) (While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Write (Literal 100)
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Literal 100
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: If (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))) (While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))))) Skip
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Gt (Var "y") (Literal 0)
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "y"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Literal 0
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))) (While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Write (Var "y")
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "y"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Let "y" (BinaryOps Sub (Var "y") (Literal 1))) (While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Let "y" (BinaryOps Sub (Var "y") (Literal 1))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Sub (Var "y") (Literal 1)
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "y"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Literal 1
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 5)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 4)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: If (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))) (While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))))) Skip
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 4)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Gt (Var "y") (Literal 0)
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 4)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "y"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 4)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Literal 0
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 4)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))) (While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 4)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 4)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Write (Var "y")
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 4)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "y"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 4)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Let "y" (BinaryOps Sub (Var "y") (Literal 1))) (While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 4)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Let "y" (BinaryOps Sub (Var "y") (Literal 1))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 4)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Sub (Var "y") (Literal 1)
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 4)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "y"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 4)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Literal 1
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 4)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 3)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: If (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))) (While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))))) Skip
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 3)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Gt (Var "y") (Literal 0)
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 3)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "y"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 3)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Literal 0
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 3)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))) (While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 3)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 3)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Write (Var "y")
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 3)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "y"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 3)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Let "y" (BinaryOps Sub (Var "y") (Literal 1))) (While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 3)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Let "y" (BinaryOps Sub (Var "y") (Literal 1))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 3)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Sub (Var "y") (Literal 1)
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 3)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "y"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 3)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Literal 1
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 3)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 2)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: If (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))) (While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))))) Skip
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 2)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Gt (Var "y") (Literal 0)
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 2)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "y"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 2)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Literal 0
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 2)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))) (While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 2)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 2)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Write (Var "y")
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 2)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "y"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 2)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Let "y" (BinaryOps Sub (Var "y") (Literal 1))) (While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 2)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3,IntVal 2] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Let "y" (BinaryOps Sub (Var "y") (Literal 1))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 2)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3,IntVal 2] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Sub (Var "y") (Literal 1)
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 2)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3,IntVal 2] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "y"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 2)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3,IntVal 2] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Literal 1
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 2)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3,IntVal 2] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 1)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3,IntVal 2] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: If (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))) (While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))))) Skip
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 1)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3,IntVal 2] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Gt (Var "y") (Literal 0)
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 1)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3,IntVal 2] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "y"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 1)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3,IntVal 2] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Literal 0
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 1)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3,IntVal 2] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))) (While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 1)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3,IntVal 2] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 1)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3,IntVal 2] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Write (Var "y")
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 1)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3,IntVal 2] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "y"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 1)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3,IntVal 2] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Seq (Let "y" (BinaryOps Sub (Var "y") (Literal 1))) (While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 1)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3,IntVal 2,IntVal 1] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Let "y" (BinaryOps Sub (Var "y") (Literal 1))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 1)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3,IntVal 2,IntVal 1] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Sub (Var "y") (Literal 1)
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 1)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3,IntVal 2,IntVal 1] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "y"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 1)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3,IntVal 2,IntVal 1] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Literal 1
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 1)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3,IntVal 2,IntVal 1] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1))))
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 0)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3,IntVal 2,IntVal 1] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: If (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))) (While (BinaryOps Gt (Var "y") (Literal 0)) (Seq (Write (Var "y")) (Let "y" (BinaryOps Sub (Var "y") (Literal 1)))))) Skip
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 0)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3,IntVal 2,IntVal 1] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: BinaryOps Gt (Var "y") (Literal 0)
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 0)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3,IntVal 2,IntVal 1] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Var "y"
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 0)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3,IntVal 2,IntVal 1] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Literal 0
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 0)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3,IntVal 2,IntVal 1] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: Skip
     Machine: Simulator (Scope (fromList [("x",IntVal 10),("y",IntVal 0)]) Nothing) [] [BoolVal True,BoolVal False,BoolVal False,BoolVal True,BoolVal True,BoolVal True,BoolVal True,IntVal 100,IntVal 5,IntVal 4,IntVal 3,IntVal 2,IntVal 1] (StdGen {unStdGen = SMGen 9297814886316923340 13679457532755275413})
Simulating: ConcurSeq (Let "x" (Literal 2)) (Let "y" (Literal 3))
     Machine: Simulator (Scope (fromList []) Nothing) [] [] (StdGen {unStdGen = SMGen 4233148493373801447 10905525725756348111})
after reduction in concurseq 
Simulating: Let "y" (Literal 3)
     Machine: Simulator (Scope (fromList []) Nothing) [] [] (StdGen {unStdGen = SMGen 4233148493373801447 10905525725756348111})
Simulating: Literal 3
     Machine: Simulator (Scope (fromList []) Nothing) [] [] (StdGen {unStdGen = SMGen 4233148493373801447 10905525725756348111})
Simulating: Let "x" (Literal 2)
     Machine: Simulator (Scope (fromList [("y",IntVal 3)]) Nothing) [] [] (StdGen {unStdGen = SMGen 4233148493373801447 10905525725756348111})
Simulating: Literal 2
     Machine: Simulator (Scope (fromList [("y",IntVal 3)]) Nothing) [] [] (StdGen {unStdGen = SMGen 4233148493373801447 10905525725756348111})
Simulating: Seq (Seq (Let "x" (Literal 0)) (ConcurSeq (Seq (Let "x" (BinaryOps Add (Var "x") (Literal 1))) (Let "x" (BinaryOps Add (Var "x") (Literal 3)))) (Let "x" (BinaryOps Add (Var "x") (Literal 1))))) (Var "x")
     Machine: Simulator (Scope (fromList []) Nothing) [] [] (StdGen {unStdGen = SMGen 2323475623862523413 13432527470776545161})
Simulating: Seq (Let "x" (Literal 0)) (ConcurSeq (Seq (Let "x" (BinaryOps Add (Var "x") (Literal 1))) (Let "x" (BinaryOps Add (Var "x") (Literal 3)))) (Let "x" (BinaryOps Add (Var "x") (Literal 1))))
     Machine: Simulator (Scope (fromList []) Nothing) [] [] (StdGen {unStdGen = SMGen 2323475623862523413 13432527470776545161})
Simulating: Let "x" (Literal 0)
     Machine: Simulator (Scope (fromList []) Nothing) [] [] (StdGen {unStdGen = SMGen 2323475623862523413 13432527470776545161})
Simulating: Literal 0
     Machine: Simulator (Scope (fromList []) Nothing) [] [] (StdGen {unStdGen = SMGen 2323475623862523413 13432527470776545161})
Simulating: Seq (ConcurSeq (Seq (Let "x" (BinaryOps Add (Var "x") (Literal 1))) (Let "x" (BinaryOps Add (Var "x") (Literal 3)))) (Let "x" (BinaryOps Add (Var "x") (Literal 1)))) (Var "x")
     Machine: Simulator (Scope (fromList [("x",IntVal 0)]) Nothing) [] [] (StdGen {unStdGen = SMGen 2323475623862523413 13432527470776545161})
Simulating: ConcurSeq (Seq (Let "x" (BinaryOps Add (Var "x") (Literal 1))) (Let "x" (BinaryOps Add (Var "x") (Literal 3)))) (Let "x" (BinaryOps Add (Var "x") (Literal 1)))
     Machine: Simulator (Scope (fromList [("x",IntVal 0)]) Nothing) [] [] (StdGen {unStdGen = SMGen 2323475623862523413 13432527470776545161})
after reduction in concurseq 
Simulating: Let "x" (BinaryOps Add (Var "x") (Literal 1))
     Machine: Simulator (Scope (fromList [("x",IntVal 0)]) Nothing) [] [] (StdGen {unStdGen = SMGen 2323475623862523413 13432527470776545161})
Simulating: BinaryOps Add (Var "x") (Literal 1)
     Machine: Simulator (Scope (fromList [("x",IntVal 0)]) Nothing) [] [] (StdGen {unStdGen = SMGen 2323475623862523413 13432527470776545161})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 0)]) Nothing) [] [] (StdGen {unStdGen = SMGen 2323475623862523413 13432527470776545161})
Simulating: Literal 1
     Machine: Simulator (Scope (fromList [("x",IntVal 0)]) Nothing) [] [] (StdGen {unStdGen = SMGen 2323475623862523413 13432527470776545161})
Simulating: Seq (Let "x" (BinaryOps Add (Var "x") (Literal 1))) (Let "x" (BinaryOps Add (Var "x") (Literal 3)))
     Machine: Simulator (Scope (fromList [("x",IntVal 1)]) Nothing) [] [] (StdGen {unStdGen = SMGen 2323475623862523413 13432527470776545161})
Simulating: Let "x" (BinaryOps Add (Var "x") (Literal 1))
     Machine: Simulator (Scope (fromList [("x",IntVal 1)]) Nothing) [] [] (StdGen {unStdGen = SMGen 2323475623862523413 13432527470776545161})
Simulating: BinaryOps Add (Var "x") (Literal 1)
     Machine: Simulator (Scope (fromList [("x",IntVal 1)]) Nothing) [] [] (StdGen {unStdGen = SMGen 2323475623862523413 13432527470776545161})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 1)]) Nothing) [] [] (StdGen {unStdGen = SMGen 2323475623862523413 13432527470776545161})
Simulating: Literal 1
     Machine: Simulator (Scope (fromList [("x",IntVal 1)]) Nothing) [] [] (StdGen {unStdGen = SMGen 2323475623862523413 13432527470776545161})
Simulating: Seq (Let "x" (BinaryOps Add (Var "x") (Literal 3))) (Var "x")
     Machine: Simulator (Scope (fromList [("x",IntVal 2)]) Nothing) [] [] (StdGen {unStdGen = SMGen 15756003094639068574 13432527470776545161})
Simulating: Let "x" (BinaryOps Add (Var "x") (Literal 3))
     Machine: Simulator (Scope (fromList [("x",IntVal 2)]) Nothing) [] [] (StdGen {unStdGen = SMGen 15756003094639068574 13432527470776545161})
Simulating: BinaryOps Add (Var "x") (Literal 3)
     Machine: Simulator (Scope (fromList [("x",IntVal 2)]) Nothing) [] [] (StdGen {unStdGen = SMGen 15756003094639068574 13432527470776545161})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 2)]) Nothing) [] [] (StdGen {unStdGen = SMGen 15756003094639068574 13432527470776545161})
Simulating: Literal 3
     Machine: Simulator (Scope (fromList [("x",IntVal 2)]) Nothing) [] [] (StdGen {unStdGen = SMGen 15756003094639068574 13432527470776545161})
Simulating: Var "x"
     Machine: Simulator (Scope (fromList [("x",IntVal 5)]) Nothing) [] [] (StdGen {unStdGen = SMGen 15756003094639068574 13432527470776545161})
